{
    "@metadata": {
        "author": "Ellen Spertus <ellen.spertus@gmail.com>",
        "lastupdated": "2013-08-27 11:36:37.930448",
        "locale": "en_us",
        "messagedocumentation" : "qqq"
    },
    "Turtle.colourTooltip": "Changes the color of the pen.",
    "Turtle.degrees": "degrees",
    "Turtle.hideTurtle": "hide turtle",
    "Turtle.moveBackward": "move backward by",
    "Turtle.moveForward": "move forward by",
    "Turtle.moveForwardTooltip": "Moves the turtle forward.",
    "Turtle.jumpBackward": "jump backward by",
    "Turtle.jumpForward": "jump forward by",
    "Turtle.jumpForwardTooltip": "Moves the turtle forward without leaving any marks.",
    "Turtle.moveTooltip": "Moves the turtle forward or backward by the specified amount.",
    "Turtle.penDown": "pen down",
    "Turtle.penTooltip": "Lifts or lowers the pen, to start or stop drawing.",
    "Turtle.penUp": "pen up",
    "Turtle.dots": "dots",
    "Turtle.setColour": "set color",
    "Turtle.setWidth": "set width",
    "Turtle.showTurtle": "show turtle",
    "Turtle.turnLeft": "turn left by",
    "Turtle.turnRightTooltip": "Turns the turtle right by the specified angle.",
    "Turtle.turnRight": "turn right by",
    "Turtle.turnTooltip": "Turns the turtle left or right by the specified number of degrees.",
    "Turtle.turtleVisibilityTooltip": "Makes the turtle (green circle and arrow) visible or invisible.",
    "Turtle.widthTooltip": "Changes the width of the pen.",
    "Turtle.loopVariable": "counter",
    "Turtle.blocksUsed": "Blocks used: %1",
    "Turtle.notBlackColour": "You need to set a color other than black for this level.",
    "Turtle.tooFewColours": "You need to use at least %1 different colors on this level.  You used only %2.",
    "Turtle.wrongColour": "Your picture is the wrong color.  For this level, it needs to be %1.",
    "Turtle.extraColours": "You used extra colors.  Nice!",
    "Turtle.drawASquare": "draw a square",
    "Turtle.lengthParameter": "length",
    "Turtle.drawASnowman": "draw a snowman",
    "Turtle.heightParameter": "height",
    "Turtle.title": "CS First: Turtle Graphics %1",
    "Turtle.numBlocksNeeded": "This level can be solved with %1 blocks.  You used %2.",
    "Turtle.rightAnswer": "You got it!",
    "Turtle.wrongAnswer": "Wrong!  Try again.",
    "Turtle.showMe": "Show me",
    "Turtle.gotoNext": "Continue",
    "Turtle.instructions1_1": "I'm a turtle with chalk on my belly. Stack up blocks and press &quot;Run Program&quot; to make me draw the shown picture.",
    "Turtle.instructions1_2": "Draw a square, making each side a different color.",
    "Turtle.instructions1_3": "Make a square using only 3 blocks.  (Remember that blocks to set color are free.)",
    "Turtle.instructions1_4": "Draw a triangle whose sides are all 100 pixels and are in random colors.  You'll have to figure out how far to turn.",
    "Turtle.instructions1_5": "Draw a triangle and then a square to draw an envelope.",
    "Turtle.instructions1_6": "Can you figure out how draw this triangle and square?",
    "Turtle.instructions1_7": "See if you can draw these green glasses.",
    "Turtle.instructions1_8": "After trying out these blocks, see what happens if you make them repeat 8 times.  It should look a little different every time you run it.",
    "Turtle.instructions1_9": "Figure out what number to replace the question marks with to draw a circle.",
    "Turtle.instructions1_10": "Draw anything you want. Some ideas are a stick figure, snowflake, or spiral.  You could also try out the new &quot;set width&quot; block.  Have fun!",
    "Turtle.instructions2_1": "Find the familiar blocks in the new categories to draw a square in your favorite color.",
    "Turtle.instructions2_2": "Use the new &quot;draw a square&quot; block, found in the &quot;Functions&quot; category, to draw a small green square.",
    "Turtle.instructions2_3": "Use the new block to draw 3 squares of size 100, each 120 degrees apart, in random colors.",
    "Turtle.instructions2_4": "Now change the code to draw 36 squares, each 10 degrees apart.",
    "Turtle.instructions2_5": "Draw squares with sides of 50, 60, 70, 80, and 90 pixels.  You'll need lots of blocks.",
    "Turtle.instructions2_6": "Modify this program to get the value of counter (in the Variables category) when drawing a square instead of the value 10.",
    "Turtle.instructions2_7": "Replace the pale (disabled) blocks with a &quot;count with&quot; block to draw the same spiral.",
    "Turtle.instructions2_8": "Draw three snowmen 150 dots tall in different colors, 100 dots apart.  Use the new &quot;draw a snowman&quot; function and &quot;jump forward&quot; block.",
    "Turtle.instructions2_9": "Use a &quot;count with&quot; loop to draw a family of snowmen with heights of 110, 100, 90, 80, and 70 dots, each 60 dots apart.",
    "Turtle.instructions2_10": "Draw whatever you want.  One idea is experimenting with different types of spirals.  What happens if you change the turn amount, rather than the move amount?  TODO: Add starting blocks.",
    "Turtle.instructions3_1": "You can now see how the &quot;draw a square&quot; and &quot;draw a circle&quot; functions are defined.  Defining a function doesn't run its blocks.  You have to pull out the &quot;draw a square&quot; block to actually draw a square.",
    "Turtle.instructions3_2": "Using the &quot;draw a square&quot; function as an example, create a &quot;draw a triangle&quot; function and use it.",
    "Turtle.instructions3_3": "Draw triangular fences around the cats and a square fence around the cow.  Tip: Test the program as you go along.",
    "Turtle.instructions3_4": "See if you can figure out how to use &quot;draw a square&quot; and &quot;draw a triangle&quot; (and some other blocks) to draw a house around the lion.",
    "Turtle.instructions3_5": "Now create a &quot;draw a house&quot; function and use it house two cats.",
    "Turtle.instructions3_6": "Using &quot;draw a square&quot; as an example, add an input named &quot;length&quot; to &quot;draw a triangle&quot;.  Then, draw triangles in different colors around the animals.",
    "Turtle.instructions3_7": "Add a &quot;length&quot; input to &quot;draw a house&quot; and build a big house for the elephant.",
    "Turtle.instructions3_8": "Here are all of the blocks from the previous level.  Modify &quot;draw a house&quot; so the turtle ends up at the bottom right corner of the new house.  Use this modified function to house all the animals.",
    "Turtle.instructions3_9": "Use a &quot;count with&quot; block and your code from the previous level to draw houses of size 50, 100, and 150.",
    "Turtle.instructions3_10": "You're now free to do whatever you want.  One idea is to try running this program with different turn amounts (higher or lower than 90).  Other ideas are to draw a star, circle, heart, or animal.",
    "Apps.projectMessage": "CS First",
    "Maze.turtle1": "Turtle 1",
    "Maze.turtle2": "Turtle 2",
    "Maze.turtle3": "Turtle 3",
    "Turtle.runProgram": "Run",
    "Turtle.resetProgram": "Reset",
    "Turtle.codeTooltip": "See generated JavaScript code.",
    "Turtle.hintTitle": "Hint:",
    "Turtle.nextLevel": "Congratulations! You have completed this level.",
    "Turtle.finalLevelMsg": "Congratulations! You have solved the final level.",
    "BlocklyApps.moveForwardError1Msg": "You'll need to move me forward in order to draw anything.",
    "BlocklyApps.moveForwardError2Msg": "You need to use the &quot;move forward&quot; block.",
    "BlocklyApps.moveError1Msg": "You'll need to move me in order to draw anything.",
    "BlocklyApps.moveError2Msg": "You need to use the &quot;move&quot; block.",
    "Turtle.moveForwardError1Msg": "I'll need to turn in order to draw this picture.",
    "Turtle.moveForwardError2Msg": "I'll need to turn right by 90 degrees to draw this picture.",
    "Turtle.turnError1Msg": "I'll need to turn in order to draw this picture.",
    "Turtle.turnError2Msg": "Use a &quot;turn&quot; block.",
    "Turtle.repeatError1Msg": "The &quot;repeat&quot; block saves you from having to repeat yourself.",
    "Turtle.repeatError2Msg": "You need to use a &quot;repeat&quot; block.",
    "Turtle.colour_randomError1Msg": "The &quot;set color&quot; and &quot;random color&quot; blocks give you random (unpredictable) colors.",
    "Turtle.colour_randomError2Msg": "Pull out the &quot;set color&quot; block that contains a &quot;random color&quot; block, and put it in the appropriate place.",
    "Turtle.drawColourError1Msg": "To change the color I draw, use the &quot;set color&quot; block.",
    "Turtle.drawColourError2Msg": "Each &quot;set color&quot; block sets the color of everything I draw after it until the next &quot;set color&quot; block.",
    "Turtle.forError1Msg-p2-l6": "Reload this level to get the &quot;count with&quot; block back.",
    "Turtle.forError1Msg-p2-l7": "You need a &quot;count with&quot; block to give the counter values from 25 through 60.",
    "Turtle.forError1Msg-p2-l9": "You need a &quot;count with&quot; block to give the counter values from 110 down to 70.",
    "Turtle.forError2Msg-p2-l7": "Open the Loops category, and drag out a &quot;count with&quot; block.",
    "Turtle.forError2Msg-p2-l9": "Open the Loops category, and drag out a &quot;count with&quot; block. Have it count from 110 to 70 by 10.",
    "Turtle.getCounterError1Msg-p2-l6": "You need the &quot;counter&quot; block to draw squares of different lengths.",
    "Turtle.getCounterError1Msg-p2-l7": "You need the &quot;counter&quot; block to draw lines of different lengths.",
    "Turtle.getCounterError1Msg-p2-l9": "You need the &quot;counter&quot; block to draw snowmen of different heights.",
    "Turtle.getCounterError2Msg-p2-l6": "From the &quot;Variables&quot; category, get the &quot;counter&quot; block, and use it as the &quot;length&quot; input to &quot;draw a square&quot;.",
    "Turtle.getCounterError2Msg-p2-l7": "From the &quot;Variables&quot; category, get the &quot;counter&quot; block, and use it as the input to the &quot;move forward&quot; block.",
    "Turtle.getCounterError2Msg-p2-l9": "From the &quot;Variables&quot; category, get the &quot;counter&quot; block, and use it as the input to the &quot;draw a snowman&quot; block.",
    "Turtle.draw_a_snowmanError1Msg": "You need to use the &quot;draw a snowman&quot; block.",
    "Turtle.draw_a_snowmanError2Msg": "You can get the &quot;draw a snowman&quot; block from the &quot;Functions&quot; category.",
    "Turtle.jumpError1Msg": "The &quot;jump forward&quot; block moves the turtle without drawing anything.",
    "Turtle.jumpError2Msg": "Open the Actions category to Get the &quot;jump forward&quot; block, and use it to move the turtle between each snowman.",
    "Turtle.drawASquareError1Msg-p2": "In this tutorial, to draw a square, use the new &quot;draw a square&quot; function.",
    "Turtle.drawASquareError2Msg-p2": "Open the Functions category and get a &quot;draw a square&quot; block.",
    "Turtle.drawASquareError1Msg-p3": "The shown code tells the turtle <x id='START_EMPHASIS'/>how<x id='END_EMPHASIS'/> to draw a square but not to draw a square.  You need to pull out a &quot;draw a square&quot; block from the Functions category.",
    "Turtle.drawASquareError2Msg-p3": "From the current code, the turtle doesn't know that you want to draw a square. Pull out a &quot;draw a square&quot; block from the Functions category.",
    "Turtle.drawATriangleError1Msg-p3": "You need a &quot;draw a triangle&quot; block to let the turtle know you want it to draw a triangle.",
    "Turtle.drawATriangleError2Msg-p3": "To use your &quot;draw a triangle&quot; function, open the &quot;Functions&quot; category and pull out a &quot;draw a triangle&quot; block.",
    "Turtle.triangleDefErrorMsg1": "Oops.  It looks like you no longer have a block to tell the turtle how to draw a triangle.  Try reloading the page.",
    "Turtle.triangleDefErrorMsg2": "Reload the page to get back the &quot;to draw a triangle&quot; block.",
    "Turtle.defineAnythingErrorMsg1": "You need to create a function.",
    "Turtle.defineAnythingErrorMsg2": "Open the Functions category, and pull out a &quot;do something&quot; block, and fill it in.",
    "Turtle.defineDrawAHouseErrorMsg1-l5": "The function you create must be named &quot;draw a house&quot;.",
    "Turtle.defineDrawAHouseErrorMsg1-l7": "Oops.  You seem to have deleted or renamed the provided &quot;draw a house&quot; function.  Reload the page to get it back.",
    "Turtle.defineDrawAHouseErrorMsg2": "Put &quot;draw a house&quot; in the light purple area of the &quot;to do something&quot; block you dragged out.",
    "Turtle.drawAHouseError1Msg": "Now that you created a &quot;draw a house&quot; function, you need to call it.",
    "Turtle.drawAHouseError2Msg": "Open the Functions category, and pull out a &quot;draw a house&quot; block.",
    "Turtle.triangleDefWithParameterErrorMsg1": "You need to add a &quot;length&quot; input to your function definition. The first step is clicking on the blue &quot;+&quot; next to &quot;to draw a triangle&quot;.",
    "Turtle.triangleDefWithParameterErrorMsg2": "Your &quot;draw a triangle&quot; function needs a &quot;length&quot; input. Click on the blue &quot;+&quot; next to &quot;to draw a triangle&quot;, drag in an input, and name it &quot;length&quot;.",
    "Turtle.triangleDefWithLengthParameterErrorMsg1": "You added an input to &quot;draw a triangle&quot;.  Now you need to change its name to &quot;length&quot;.",
    "Turtle.triangleDefWithLengthParameterErrorMsg2": "Click on the blue &quot;+&quot; next to &quot;to draw a triangle&quot; and change the name of the input to &quot;length&quot;.",
    "Turtle.moveByLengthMsg1": "The amount to move forward should depend on the input &quot;length&quot;.",
    "Turtle.moveByLengthMsg2": "Open the Variables category, and drag a &quot;length&quot; block into the &quot;move forward&quot; block.",
    "Turtle.triangleCallWithNumericParameterErrorMsg1": "When using the &quot;draw a triangle&quot; block, you need to provide an input that says how big the triangle should be.",
    "Turtle.triangleCallWithNumericParameterErrorMsg2": "Open the Math category, and pull out a number block.  Change its value and plug it into the &quot;draw a triangle&quot; block to say how big the first triangle should be.",
    "Turtle.squareCallWithVariableParameterErrorMsg1": "The &quot;length&quot; input to the &quot;draw a triangle&quot; block within &quot;to draw a house&quot; should depend on the length of the house.",
    "Turtle.squareCallWithParameterErrorMsg2": "The &quot;length&quot; input to &quot;draw a triangle&quot; should be the &quot;length&quot; variable.",
    "Turtle.triangleCallWithVariableParameterErrorMsg1": "The &quot;length&quot; input to the &quot;draw a square&quot; block within &quot;to draw a house&quot; should depend on the length of the house.",
    "Turtle.triangleCallWithParameterErrorMsg2": "The &quot;length&quot; input to &quot;draw a triangle&quot; should be the &quot;length&quot; variable.",
    "BlocklyApps.emptyBlocksErrorMsg": "Remove unused empty blocks.",
    "Maze.tooFewBlocksMsg": "You are using all of the necessary types of blocks, but you'll need more blocks to complete this level.",
    "Turtle.levelIncompleteError": "You are using all of the necessary types of blocks but not in the right way.",
    "Turtle.tryAgain": "Try again",
    "Turtle.continue": "Continue",
    "Turtle.catTurtle": "Actions",
    "Turtle.catColour": "Color",
    "Turtle.catProcedures": "Functions",
    "Turtle.catControl": "Loops",
    "Turtle.catMath": "Math",
    "Turtle.catVariables": "Variables"
}
